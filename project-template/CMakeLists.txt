PROJECT(%PROJECT_NAME%)
CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
ENABLE_LANGUAGE(ASM)

SET(STM32LIB_DIR "%STM32LIB_DIR%")

INCLUDE_DIRECTORIES(
  ${STM32LIB_DIR}
)

SET(STM32_CHIP "%CHIP%")
SET(STM32_CHIP_DEF "%STM32_CHIP_DEF%")
SET(STM32_FLASH_SIZE "%STM32_FLASH_SIZE%")
SET(STM32_RAM_SIZE "%STM32_RAM_SIZE%")

SET(PROJECT_SOURCES
  ${STM32LIB_DIR}/stm32lib/hal/rcc.c
  ${STM32LIB_DIR}/stm32lib/hal/gpio.c
  ${STM32LIB_DIR}/stm32lib/hal/usart.c
  ${STM32LIB_DIR}/stm32lib/usart.c
  ${STM32LIB_DIR}/stm32lib/rcc.c
  
  %SYSTEM_FILE_NAME%
  main.c
)

SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DUSE_FULL_ASSERT -D${STM32_CHIP_DEF}")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DUSE_FULL_ASSERT -D${STM32_CHIP_DEF}")
SET(CMAKE_EXE_LINKER_FLAGS "-T${CMAKE_CURRENT_BINARY_DIR}/../%LINKER_FILE_NAME% ${CMAKE_EXE_LINKER_FLAGS}")

ADD_EXECUTABLE(${CMAKE_PROJECT_NAME}.elf ${PROJECT_SOURCES} %LINKER_FILE_NAME% %STARTUP_FILE_NAME%)
TARGET_LINK_LIBRARIES(${CMAKE_PROJECT_NAME}.elf)

ADD_CUSTOM_TARGET(${CMAKE_PROJECT_NAME}.hex DEPENDS ${CMAKE_PROJECT_NAME}.elf COMMAND ${CMAKE_OBJCOPY} -Oihex ${CMAKE_PROJECT_NAME}.elf ${CMAKE_PROJECT_NAME}.hex)
ADD_CUSTOM_TARGET(${CMAKE_PROJECT_NAME}.bin DEPENDS ${CMAKE_PROJECT_NAME}.elf COMMAND ${CMAKE_OBJCOPY} -Obinary ${CMAKE_PROJECT_NAME}.elf ${CMAKE_PROJECT_NAME}.bin)
ADD_CUSTOM_TARGET(${CMAKE_PROJECT_NAME}.list DEPENDS ${CMAKE_PROJECT_NAME}.elf COMMAND ${CMAKE_OBJDUMP} -x -S ${CMAKE_PROJECT_NAME}.elf > ${CMAKE_PROJECT_NAME}.list)

